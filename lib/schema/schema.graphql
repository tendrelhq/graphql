enum Language {
  en
  es
}

type Tag {
  id: ID!
  name: String!
  type: String!
  parent: ID
}

type Customer {
  id: ID!
  name: String!
  defaultLanguage: Language!
}

type Location {
  id: ID!
  customerId: ID!
  name: String!
  parentId: ID
  tags: [Tag!]!
}

type Query {
  customers: [Customer!]!
  customer(id: ID!): Customer!
  locations(customerId: ID!, parentId: ID): [Location!]!
  sites(customerId: ID!): [Location!]!
}

type Mutation {
  createCustomer(input: CreateCustomerInput!): ID!
  updateCustomer(input: UpdateCustomerInput!): ID!
  deleteCustomer(id: ID!): ID!
  createLocation(input: CreateLocationInput!): ID!
  updateLocation(input: UpdateLocationInput!): ID!
  deleteLocation(id: ID!): ID!
}

input CreateTagInput {
  id: ID!
  name: String!
  type: String!
  parent: ID
}

input UpdateTagInput {
  id: ID!
  name: String
}

input CreateCustomerInput {
  id: ID!
  name: String!
  defaultLanguage: Language!
}

input UpdateCustomerInput {
  id: ID!
  name: String
  defaultLanguage: Language
}

input CreateLocationInput {
  id: ID!
  customerId: ID!
  name: String!
  tags: [CreateTagInput!]!
}

input UpdateLocationInput {
  id: ID!
  name: String
  tags: [UpdateTagInput!]
}
