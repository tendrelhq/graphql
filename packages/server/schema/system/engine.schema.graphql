"""
State characterizes something, most commonly an entity, as existing in a
particular state. For example, an entity could be in a "pending" state.
"""
interface State {
  tag: String
}

type DebugInfo {
  createdAt: String!
  # createdBy: Identity
  updatedAt: String!
  updatedBy: Identity
}

type ComponentConnection {
  edges: [ComponentEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type ComponentEdge {
  cursor: String!
  debug: DebugInfo!
  node: Component!
}

interface Referenceable implements Component {
  id: ID!
}

#
# Sort/filter/search primitives
#
"""
Defines the sort order for queries that support edge ordering.
Ordering depends on the scalar type:
  - Boolean scalars are sorted false < true
  - Int scalars are sorted numerically
  - String scalars are sorted lexicographically
"""
enum SortOrder {
  asc
  desc
}
