# via graphql-scalars
scalar URL

"""
TODO
"""
type Activatable implements Component {
  id: Entity!
  active: Boolean!
  updatedAt: Temporal!
}

"""
TODO
"""
input ActiveInput {
  id: Entity!
  active: Boolean!
  updatedAt: TemporalInput!
}

"""
TODO
"""
type Attachment implements Component {
  id: Entity!
  attachment: String!
}

type AttachmentConnection implements Connection {
  edges: [AttachmentEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type AttachmentEdge implements Edge {
  cursor: String!
  node: Attachment!
}

interface Assignable implements Component {
  id: Entity!
}

"""
TODO
"""
type Assignee implements Component {
  id: Entity!
  assignedTo: Assignable!
  assignedAt: Temporal!
}

"""
TODO
"""
input AssigneeInput {
  id: Entity!
  assignTo: Entity!
  assignAt: TemporalInput!
}

type AssigneeConnection implements Connection {
  edges: [AssigneeEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type AssigneeEdge implements Edge {
  cursor: String!
  node: Assignee!
}

"""
TODO
"""
type Auditable implements Component {
  id: Entity!
  enabled: Boolean!
}

"""
TODO
"""
input AuditableInput {
  id: Entity!
  enabled: Boolean!
}

"""
TODO
"""
type Description implements Component {
  id: Entity!
  value: DynamicString!
}

"""
TODO
"""
input DescriptionInput {
  id: Entity!
  value: DynamicStringInput!
}

"""
TODO
"""
type DisplayName implements Component {
  id: Entity!
  value: DynamicString!
}

"""
TODO
"""
input DisplayNameInput {
  id: Entity!
  value: DynamicStringInput!
}

"""
Metadata pertaining to an individual Entity, e.g. when it was last updated and
by whom.
"""
type Metadata {
  updatedAt: Temporal!
  updatedBy: Identity
}

"""
TODO
"""
type Sop implements Component {
  id: Entity!
  link: URL!
}

"""
TODO
"""
input SopInput {
  id: Entity!
  link: URL!
}
